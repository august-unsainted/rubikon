from datetime import datetime
import copy

from back.data import ButtonsData, TabsData


def get_hours(start: str, end: str) -> int:
    if start == '11:00' and end == '22:00':
        return 6
    start = start.replace('00:', '24:')
    end = end.replace('00:', '24:')
    if start > end:
        start = start.replace('24:', '00:')
    hours = int(end[:2]) - int(start[:2])
    return hours


def get_end(start: str, hours: str) -> str:
    start = start.replace('00:', '24:')
    end_hours = (int(start[:2]) + int(hours)) % 24
    end = f'{str(end_hours).rjust(2, '0')}:{start[3:]}'
    return end


def get_amounts(service: str, hours: str, discount: str) -> (str, str):
    amount = int(ButtonsData.price[service]) * int(hours)
    if discount:
        discount = discount.split(' ')[-1]
        amount -= int(amount / 100 * int(discount))
    return str(amount), str(amount / 2)[:-2]


def get_prepayment_info(win: dict[str, str]) -> (str, str):
    win = copy.deepcopy(win)

    if win['service'].startswith('–ê—Ä–µ–Ω–¥–∞'):
        win['service'] = win['service'].replace('–ê', '–∞').replace('–∞—Ä–µ–Ω–¥–∞', '–∞—Ä–µ–Ω–¥—ã')
    else:
        win['service'] = win['service'].replace('–∏–µ', '–∏—è')

    amount, prepayment = ["{:,}".format(int(win[key])).replace(',', ' ') for key in ['amount', 'prepayment']]

    reservation_text = (
        f"–ë—Ä–æ–Ω–∏—Ä—É–µ–º –º—ã –ø–æ 50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ ‚ò∫Ô∏è\n\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å {win['service']} {f'–Ω–∞ {win['date']} ' if win['date'] else ''}c {win['start']} –¥–æ {win['end']} {'—Å —É—á—ë—Ç–æ–º —Å–∫–∏–¥–∫–∏ ' if win['discount'] else ''}—Å–æ—Å—Ç–∞–≤–∏–ª–∞:\n"
        f"‚Äî {amount} —Ä—É–±–ª–µ–π\n\n"
        f"–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞:\n"
        f"‚Äî {prepayment} —Ä—É–±–ª–µ–π\n\n"
        f"–†–ï–ö–í–ò–ó–ò–¢–´:\n"
        f"‚ùóÔ∏è–°–ë–ï–†–ë–ê–ù–ö - 89085995085\n"
        f"–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ü–∞–≤–µ–ª –õ—å–≤–æ–≤–∏—á –õ.\n\n"
        f"–ö–∞–∫ –ø–µ—Ä–µ–≤–µ–¥–µ—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—é–¥–∞ —á–µ–∫ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç)\n\n"
        f"‚ùóÔ∏è –ú–µ—Å—Ç–æ –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∑–∞ –í–∞–º–∏ —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã üôåüèΩ\n\n"
        f"–ü—Ä–∏ –æ—Ç–º–µ–Ω–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–µ –ø–æ–∑–∂–µ, —á–µ–º –∑–∞ 2 —Å—É—Ç–æ–∫. –ï—Å–ª–∏ –í—ã –æ—Ç–º–µ–Ω—è–µ—Ç–µ –±—Ä–æ–Ω—å –º–µ–Ω–µ–µ, —á–µ–º –∑–∞ 2 —Å—É—Ç–æ–∫, –æ–Ω–∞ –±—É–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ –í–∞—à –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—ã–π –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤ –Ω–∞—à–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏.\n\n"
        f"–ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à–µ –∏–º—è –∏ –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ ‚ò∫Ô∏è"
    )
    return reservation_text


def get_main_info(values: dict) -> dict[str: str]:
    win = {}
    for key in ButtonsData.buttons_texts.values():
        if key in ['start', 'end']:
            win[key] = f'{values[key + '-hour']}:{values[key + '-minute']}'
        else:
            win[key] = values[key]

    start, end, hours = win['start'], win['end'], win['hours']

    if (start and end) or (start and hours):
        if win['hours']:
            win['end'] = get_end(win['start'], win['hours'])
        else:
            win['hours'] = get_hours(win['start'], win['end'])

        if win['service'].startswith('–ö–∏–Ω–æ—Å–≤–∏–¥–∞–Ω–∏–µ') and win['discount'] == '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è 10':
            win['discount'] = ''

        win['amount'], win['prepayment'] = get_amounts(win['service'], win['hours'],
                                                       win['discount'])
        win['prepayment_info'] = get_prepayment_info(win)

        for data in TabsData.keys:
            if win.get(data):
                new_data = win[data]
            elif data == 'time':
                new_data = f'c {win['start']} –¥–æ {win['end']} ({win['hours']}—á)'
            else:
                continue
            win[f'gen_{data}'] = new_data

        flag = True
        for key in ButtonsData.buttons_texts.values():
            if not win[key]:
                flag = False
        if flag:
            date = datetime.strptime(win['date'], '%B, %d (%A)').strftime('%d.%m')
            short_service = win['service'].replace('–ö–∏–Ω–æ—Å–≤–∏–¥–∞–Ω–∏–µ ¬´', '').replace('–ê—Ä–µ–Ω–¥–∞ –∑–∞–ª–∞ ¬´', '').replace('¬ª', '')
            table_prepayment = f'–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞;;{date} {short_service} {win['start']};;—Ä.{win['prepayment']},00;;;;;–ü–µ—Ä–µ–≤–æ–¥'
            win['table_prepayment'] = table_prepayment
            table_reservation = (f'{win['name']};{win['phone']};;{short_service};{win['start']}-{win['end']};'
                                 f'{win['clients']};{win['prepayment']};{win['prepayment']};{win['amount']};;'
                                 f'{'—Å–∫–∏–¥–∫–∞ –¥—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫–∏' if win['discount'][0] == '–î' else ''}')
            win['table_reservation'] = table_reservation
            goodbye = (f'–û—Ç–ª–∏—á–Ω–æ! –ë—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—Å {win['formatted_date']} –≤ {win['start']})\n\n'
                       f'–° —Å–æ–±–æ–π –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å —Å–º–µ–Ω–Ω—É—é –æ–±—É–≤—å, –Ω–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ç–∞–ø–æ—á–∫–∏, –µ—Å–ª–∏ —á—Ç–æ ‚ò∫Ô∏è\n\n'
                       f'–ê–¥—Ä–µ—Å: –•–æ—Ü–∞ –ù–∞–º—Å–∞—Ä–∞–µ–≤–∞, 2–≤\n'
                       f'–î–æ –≤—Å—Ç—Ä–µ—á–∏! ‚ù§Ô∏è')
            win['goodbye'] = goodbye
        return win
    return


def convert_info(reservation: str) -> str:
    reservations = reservation.split('\n')
    entry = ''
    for reservation in reservations:
        data = reservation.split('	')
        date, room, time, clients, postpayment = data[0], data[4], data[5], data[6], data[8]
        comment = data[11] if len(data) == 12 else ''

        # –≤—Å, 16 —Ñ–µ–≤—Ä–∞–ª—è	–û—é–Ω–∞	89146318777	–ó–≤–æ–Ω–∫–∏	M	14:00-16:00	6	—Ä.900,00	—Ä.900,00	—Ä.1 800,00	–†–æ–º–∞	—Å–∫–∏–¥–∫–∞ –¥—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫–∏
        # date, name, phone, source, room, time, clients, prepayment, postpayment, amount, admin, comment = reservation.split('	')
        time = time.split('-')
        date = date.replace('—è', '—å').replace('–º–∞—å', '–º–∞—è').replace('—Ç–∞', '').rstrip()
        date = datetime.strptime(date, '%a, %d %B')
        year = datetime.today().year
        date = date.strftime(f'%d.%m.{year}')
        entry += f'{date};{room};{clients};{time[0]};{time[1]};{postpayment};;;;;{'—Å–∫–∏–¥–∫–∞ –¥—Ä' if comment == '—Å–∫–∏–¥–∫–∞ –¥—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ–∫–∏' else comment}\n'
    return entry
